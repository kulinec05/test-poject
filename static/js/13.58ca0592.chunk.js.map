{"version":3,"sources":["views/app-views/main/clients/clientlist/client/index.js","views/app-views/main/clients/clientlist/index.js"],"names":["Client","props","useState","loading","setLoading","history","useHistory","value","phnumber","phone","toString","className","name","layout","initialValues","email","username","address","street","city","onFinish","console","log","onFinishFailed","errorInfo","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","message","type","htmlType","onClick","setTimeout","replace","LoadingOutlined","ClientList","match","data","setData","useEffect","fetch","then","response","json","exact","path","url","location","state","columns","title","dataIndex","dataSource","rowKey","record","id","onRow","push"],"mappings":"mOAyIeA,EAlIA,SAACC,GACZ,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEIC,EAAQC,cACNC,EAAON,EAAMM,MACfC,EAAWD,EAAME,MAAMC,WAa3B,OACI,mCACI,qBAAKC,UAAU,OAAf,SACI,cAAC,IAAD,CACIC,KAAK,mBACLC,OAAO,WACPC,cACI,CACI,KAAQP,EAAMK,KACd,MAASL,EAAMQ,MACf,SAAYR,EAAMS,SAClB,QAAWT,EAAMU,QAAQC,OACzB,OAASV,EACT,KAAOD,EAAMU,QAAQE,MAG7BC,SA3BC,WACbC,QAAQC,IAAI,UA2BAC,eAxBO,SAAAC,GACnBH,QAAQC,IAAI,UAAWE,IASf,SAgBI,cAAC,IAAD,UACI,eAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,UACI,eAAC,IAAD,CAAKC,OAAQC,IAAb,UACI,cAAC,IAAD,CAAKL,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKI,KAAN,CACIC,MAAM,OACNpB,KAAK,OACLqB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,4BANrB,SAUI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKV,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKI,KAAN,CACIC,MAAM,WACNpB,KAAK,WACLqB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,gCANrB,SAUI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKV,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKI,KAAN,CACIC,MAAM,QACNpB,KAAK,QACLqB,MAAO,CAAC,CACJC,UAAU,EACVE,KAAM,QACND,QAAS,gCANjB,SASI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKV,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKI,KAAN,CACIC,MAAM,QACNpB,KAAK,QAFT,SAII,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKa,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKI,KAAN,CACIC,MAAM,UACNpB,KAAK,UAFT,SAII,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKa,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKI,KAAN,CACIC,MAAM,OACNpB,KAAK,OAFT,SAII,cAAC,IAAD,WAIZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAKa,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAD,CAAQS,KAAK,UAAUC,SAAS,SAASC,QAAS,WAC9ClC,GAAW,GACXmC,YAAW,kBAAIlC,EAAQmC,QAAQ,kCAAiC,MAFpE,2BAQJ,cAAC,IAAD,CAAKf,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACKxB,EAAQ,cAAC,IAAD,IAAQ,sBCtHpCsC,EAAA,EAuEFC,UApEI,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjB,EAAwBzC,mBAAS,IAAjC,mBAAO0C,EAAP,KAAaC,EAAb,KACA,EAA8B3C,oBAAS,GAAvC,mBAAgBE,GAAhB,WACA,EAAgCF,oBAAS,GAAzC,mBACIG,GADJ,UACcC,eAmCd,OAXAwC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACFL,EAAQK,GACR9C,GAAW,QAGpB,IAIC,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAI,UAAKT,EAAMU,IAAX,WAAjB,SACI,cAAC,EAAD,CAAQ9C,MAAOF,EAAQiD,SAASC,UAEpC,cAAC,IAAD,CAAQH,KAAK,IAAb,SACI,cAAC,IAAD,CAAOI,QAxCP,CACZ,CACIC,MAAO,OACPC,UAAW,QAGf,CACID,MAAO,WACPC,UAAW,YAEf,CACID,MAAO,QACPC,UAAW,SAEf,CACID,MAAO,QACPC,UAAW,UAyBIC,WAAYf,EACZgB,OAAQ,SAAAC,GAAM,OAAIA,EAAOC,IACzBC,MAAO,SAAAF,GACH,MAAO,CACHvB,QAAQ,WACJjC,EAAQ2D,KAAKrB,EAAMU,IAAI,UAAWQ,GAClCxC,QAAQC,IAAIjB,EAAQiD,SAASC","file":"static/js/13.58ca0592.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Button, Col, Form, Input, Row, Spin} from \"antd\";\r\nimport {value} from \"lodash/seq\";\r\nimport {ROW_GUTTER} from \"../../../../../../constants/ThemeConstant\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst Client = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    let history=useHistory()\r\n    const value= props.value\r\n    let phnumber = value.phone.toString()\r\n\r\n    const onFinish = () => {\r\n        console.log('Added')\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mt-4\">\r\n                <Form\r\n                    name=\"basicInformation\"\r\n                    layout=\"vertical\"\r\n                    initialValues={\r\n                        {\r\n                            'name': value.name,\r\n                            'email': value.email,\r\n                            'username': value.username,\r\n                            'address': value.address.street,\r\n                            'number':phnumber,\r\n                            'city':value.address.city\r\n                        }\r\n                    }\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={16}>\r\n                            <Row gutter={ROW_GUTTER}>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input your name!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input your username!'\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{\r\n                                            required: true,\r\n                                            type: 'email',\r\n                                            message: 'Please enter a valid email!'\r\n                                        }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24}>\r\n                                    <Form.Item\r\n                                        label=\"Address\"\r\n                                        name=\"address\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"City\"\r\n                                        name=\"city\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" onClick={()=> {\r\n                                        setLoading(true)\r\n                                        setTimeout(()=>history.replace(\"/app/main/clients/clientlist\"), 2000)\r\n                                    } }>\r\n                                        Save Change\r\n                                    </Button>\r\n\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    {loading?<Spin/>:null}\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Client;\r\n\r\n","import React, {lazy, useEffect, useState} from \"react\";\r\nimport {Spin, Table} from 'antd';\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\nimport { Route, Switch, useHistory, Routes} from \"react-router-dom\";\r\nimport Client from \"./client\";\r\n\r\nconst antIcon = <LoadingOutlined style={{fontSize: 24}} spin/>;\r\n\r\n\r\nconst ClientList = ({match}) => {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [showInfo, setShowInfo] = useState(false)\r\n    let history = useHistory()\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'username',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n\r\n        }\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setData(json)\r\n                setLoading(true)\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path={`${match.url}/client`} >\r\n                    <Client value={history.location.state} />\r\n                </Route>\r\n                <Route  path='/' >\r\n                    <Table columns={columns}\r\n                           dataSource={data}\r\n                           rowKey={record => record.id}\r\n                           onRow={record=>{\r\n                               return {\r\n                                   onClick:() => {\r\n                                       history.push(match.url+'/client', record)\r\n                                       console.log(history.location.state)\r\n                                   }\r\n                               }\r\n                           }}\r\n                    />\r\n\r\n                </Route>\r\n\r\n\r\n            </Switch>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientList;"],"sourceRoot":""}